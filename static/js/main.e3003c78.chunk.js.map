{"version":3,"sources":["kinetics/kinetics.js","App.js","serviceWorker.js","index.js"],"names":["Vector","x","y","_this","this","Object","classCallCheck","distanceTo","other","Math","sqrt","abs","pow","directionTo","distanceToOther","add","sub","scale","scalar","dotProductWith","toString","concat","toPrecision","Body","position","velocity","mass","_this2","size","arguments","length","undefined","forceWith","accelerationTowards","updateVelocityWith","delta","directionToOther","accelerationTowardsOther","accelerationVector","updatePosition","World","width","height","_this3","body","bodies","push","update","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","bodyA","value","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","bodyB","err","return","join","render","style","top","props","left","react_default","a","createElement","className","React","Component","possibleConstructorReturn","getPrototypeOf","call","handleMouseDown","event","world","objectSpread","state","mouseDown","clientX","clientY","setState","handleMouseUp","mouseUp","distance","newBody","KineticsBody","KineticsWorld","window","innerWidth","innerHeight","slice","onMouseDown","onMouseUp","map","index","App_Body","key","i","random","updateInterval","setInterval","bind","assertThisInitialized","App","App_World","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3003c78.chunk.js","sourcesContent":["const G = 6.674e-11; // [N * m * kg^-2]\n\nclass Vector {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  distanceTo = other => Math.sqrt(Math.abs((other.x - this.x)**2 + (other.y - this.y)**2));\n\n  directionTo = other => {\n    let distanceToOther = this.distanceTo(other);\n    return distanceToOther > 0 ? new Vector((other.x - this.x)/distanceToOther, (other.y - this.y)/distanceToOther) : new Vector(0, 0);\n  }\n\n  add = other => new Vector(this.x + other.x, this.y + other.y);\n  sub = other => new Vector(this.x - other.x, this.y - other.y);\n\n  scale = scalar => new Vector(this.x * scalar, this.y * scalar);\n\n  dotProductWith = other => this.x * other.x + this.y * other.y;\n\n  toString = () => `[${this.x.toPrecision(3)}, ${this.y.toPrecision(3)}]`;\n}\n\nclass Body {\n  constructor(position, velocity, mass, size=0) {\n    this.position = position;\n    this.velocity = velocity;\n    this.mass = mass;\n    this.size = size;\n  }\n\n  forceWith = other => G * this.mass * other.mass / this.position.distanceTo(other.position)**2; // [N] or [kg * m * s^-2]\n\n  accelerationTowards = other => this.mass > 0 && this.position.distanceTo(other.position) > 0 ? this.forceWith(other)/this.mass : 0; // [m * s^-2]\n\n  updateVelocityWith = (other, delta) => {\n    let directionToOther = this.position.directionTo(other.position);\n    let accelerationTowardsOther = this.accelerationTowards(other);\n    let accelerationVector = directionToOther.scale(accelerationTowardsOther).scale(delta / 1000);\n    this.velocity = this.velocity.add(accelerationVector);\n  }\n\n  updatePosition = delta => this.position = this.position.add(this.velocity.scale(delta / 1000));\n\n  toString = () => `pos: ${this.position}, vel: ${this.velocity}, m: ${this.mass.toPrecision(3)}`;\n}\n\nclass World {\n  constructor(width, height) {\n    this.bodies = [];\n    this.width = width;\n    this.height = height;\n  }\n\n  add = body => this.bodies.push(body);\n\n  update = delta => {\n    for (let bodyA of this.bodies) {\n      for (let bodyB of this.bodies) {\n        if (bodyA !== bodyB) {\n          bodyA.updateVelocityWith(bodyB, delta);\n          bodyA.updatePosition(delta);\n\n          if (bodyA.position.distanceTo(bodyB.position) <= bodyA.size/2 + bodyB.size/2) {\n            bodyA.velocity = bodyA.velocity.sub(\n              bodyA.position.sub(bodyB.position).scale(\n                2*bodyB.mass/(bodyA.mass + bodyB.mass)\n              ).scale(\n                bodyA.velocity.sub(bodyB.velocity).dotProductWith(bodyA.position.sub(bodyB.position)) / bodyA.position.distanceTo(bodyB.position)**2\n              )\n            );\n          }\n\n          // if (bodyA.position.distanceTo(bodyB.position) <= bodyA.size/2) {\n          //   console.log('merge!')\n          //   let velocity = bodyA.velocity.scale(1/bodyA.mass).add(bodyB.velocity.scale(1/bodyB.mass));\n          //   let position = bodyA.position.add(bodyA.position.directionTo(bodyB.position).scale(bodyA.position.distanceTo(bodyB.position)).scale(.5));\n          //   let mass = bodyA.mass + bodyB.mass;\n          //   let size = Math.max(bodyA.size, bodyB.size);\n          //   this.add(new Body(position, velocity, mass, size));\n          //   this.bodies = this.bodies.filter(body => body !== bodyA && body !== bodyB);\n          // }\n        }\n      }\n\n      if (this.width && this.height) {\n        if (bodyA.position.x - bodyA.size/2 <= 0) { \n          bodyA.velocity.x = bodyA.velocity.x * -1;\n          bodyA.position.x = bodyA.position.x - bodyA.position.x + bodyA.size/2 + 1;\n          bodyA.velocity = bodyA.velocity.scale(.8);\n        }\n        if (bodyA.position.y - bodyA.size/2 <= 0) {\n          bodyA.velocity.y = bodyA.velocity.y * -1;\n          bodyA.position.y = bodyA.position.y - bodyA.position.y + bodyA.size/2 + 1;\n          bodyA.velocity = bodyA.velocity.scale(.8);\n        }\n        if (bodyA.position.x + bodyA.size/2 >= this.width) {\n          bodyA.velocity.x = bodyA.velocity.x * -1;\n          bodyA.position.x = bodyA.position.x + this.width - bodyA.position.x - bodyA.size/2 - 1;\n          bodyA.velocity = bodyA.velocity.scale(.8);\n        }\n        if (bodyA.position.y + bodyA.size/2 >= this.height) {\n          bodyA.velocity.y = bodyA.velocity.y * -1;\n          bodyA.position.y = bodyA.position.y + this.height - bodyA.position.y - bodyA.size/2 - 1;\n          bodyA.velocity = bodyA.velocity.scale(.8);\n        }\n        // if (bodyA.position.y  bodyA.size/2 <= 0) { bodyA.velocity.y = bodyA.velocity.y * -1; bodyA.velocity = bodyA.velocity.scale(.5); }\n      }\n    }\n  }\n\n  toString = () => this.bodies.join(\"\\n\");\n}\n\nexport { Vector, Body, World };","import React from 'react';\nimport './App.css';\nimport { World as KineticsWorld, Body as KineticsBody, Vector } from './kinetics/kinetics.js';\n\nclass Body extends React.Component {\n  render = () => {\n    let style = {\n      top: this.props.body.position.y - this.props.body.size/2 + \"px\", \n      left: this.props.body.position.x - this.props.body.size/2 + \"px\",\n      width: this.props.body.size + \"px\",\n      height: this.props.body.size + \"px\",\n    }\n    return <div className=\"Body\" style={style}>\n    </div>\n  }\n}\n\nclass World extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let world = new KineticsWorld(window.innerWidth, window.innerHeight);\n    world.add(new KineticsBody(new Vector(window.innerWidth/2-20, window.innerHeight/2 - 20), new Vector(0, 0), 6e17, 40));\n    for (let i = 0; i < 5; i++) {\n      world.add(new KineticsBody(\n        new Vector(Math.random() * (window.innerWidth-10), Math.random() * (window.innerHeight-10)),\n        new Vector((Math.random() * 200 + 200) * (Math.random() > .5 ? -1 : 1), (Math.random() * 200 + 200) * (Math.random() > .5 ? -1 : 1)),\n        2,\n        20\n      ));\n    }\n\n    this.state = {world, mouseDown: null};\n\n    this.updateInterval = setInterval(this.update, 10);\n\n    this.handleMouseDown = this.handleMouseDown.bind(this);\n    this.handleMouseUp = this.handleMouseUp.bind(this);\n  }\n\n  handleMouseDown = event => {\n    let world = {...this.state.world};\n    let mouseDown = new Vector(event.clientX, event.clientY);\n    this.setState({world, mouseDown});\n  }\n  \n  handleMouseUp = event => {\n    if (!this.state.mouseDown) return;\n    let state = {...this.state};\n    let mouseUp = new Vector(event.clientX, event.clientY);\n    let distance = mouseUp.distanceTo(state.mouseDown);\n    let newBody = null;\n    if (distance > 0) {\n      newBody = new KineticsBody(mouseUp, mouseUp.directionTo(state.mouseDown).scale(distance), 2, 20);\n    } else {\n      newBody = new KineticsBody(mouseUp, new Vector(0, 0), 2, 20);\n    }\n    state.world.add(newBody);\n    state.mouseDown = null;\n    this.setState({...state});\n  }\n\n  update = () => {\n    let world = new KineticsWorld(window.innerWidth, window.innerHeight);\n    world.bodies = this.state.world.bodies.slice();\n    world.update(1);\n    this.setState({world});\n  }\n\n  render = () => {\n    return (\n      <div className=\"World\" onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp}>\n        {this.state.world.bodies.map((body, index) => <Body body={body} key={index}/>)}\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <World/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}